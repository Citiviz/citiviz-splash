window.height 	= Window.GetHeight();
window.width   	= Window.GetWidth();
window.x 	= Window.GetX();
window.y	= Window.GetY();

# background
Window.SetBackgroundTopColor(0.0, 0.0, 0.0);
Window.SetBackgroundBottomColor(0.0, 0.0, 0.0);

fun scale_keep_ratio(source, target_width, target_height) {
    source_width = source.GetWidth();
    source_height = source.GetHeight();

    target_ratio = target_height / target_width;
    source_ratio = source_height / source_width;

    if (source_ratio < target_ratio) {
        scale_factor = target_height / source_height;
    } else {
        scale_factor = target_width / source_width;
    }
    return source.Scale(source_width * scale_factor, source_height * scale_factor);
}

# logo
logo.image = scale_keep_ratio(Image("logo.png"), window.width * 0.8, window.height * 0.32);
logo.sprite = Sprite(logo.image);
logo.sprite.SetPosition(
    window.x + ((window.width / 2) - (logo.image.GetWidth() / 2)),
    window.y + ((window.height / 2) - (logo.image.GetHeight() / 2)),
    -1000
);

opacity.min = 0.3;
opacity.angle = 0.0;
opacity.value = 0.0;

fun refresh_callback ()
  {
    if (status == "normal")
      {
        opacity.angle += ((2 * 3.14) / 50) * 0.5;  # 0.5 HZ
	opacity.value = (Math.Cos(opacity.angle) + 1) / 2;
	opacity.value *= 1 - opacity.min;
	opacity.value += opacity.min;
	logo.sprite.SetPosition (
		window.x + ((window.width / 2) - (logo.image.GetWidth() / 2)),
		window.y + ((window.height / 2) - (logo.image.GetHeight() / 2)),
		-1000
	);
        logo.sprite.SetOpacity(opacity.value);
      }
    else
      {
        logo.sprite.SetX (0);
        logo.sprite.SetY (0);
        logo.sprite.SetOpacity (1);
      }
  }
  
#Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

progress_bar.original_image = Image("progress_bar.png");
progress_bar.original_image = progress_bar.original_image.Scale(window.width, 8);
progress_bar.sprite = Sprite();

progress_bar.x = window.x;
progress_bar.y = window.y + window.height - progress_bar.original_image.GetHeight();
progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);

fun progress_callback (duration, progress)
  {
    if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress))
      {
        progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
        progress_bar.sprite.SetImage (progress_bar.image);
      }
  }

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Brand --------------------------------

brand.image = Image("brand.png");
brand.sprite = Sprite(brand.image);
brand.sprite.SetPosition(
	window.x + (window.width - brand.image.GetWidth()),
	window.y + (window.height - progress_bar.original_image.GetHeight() - brand.image.GetHeight())
);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprites = [];
message_sprite_count = 0;
message_sprite_y = 10;

fun display_message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprites[message_sprite_count] = Sprite(my_image);
  message_sprites[message_sprite_count].SetPosition(10, message_sprite_y, 10000);
  message_sprites[message_sprite_count].text = text;
  message_sprite_count++;
  message_sprite_y += my_image.GetHeight();
}

fun hide_message_callback (text)
{
  for (i = 0; i < message_sprite_count; i++)
    {
      if (message_sprites[i].text == text)
        message_sprites[i] = NULL;
    }
}

Plymouth.SetDisplayMessageFunction (display_message_callback);
Plymouth.SetHideMessageFunction (hide_message_callback);
